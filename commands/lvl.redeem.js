module.exports = {
	name: 'lvl.redeem',
    description: 'Redeem a booster token',
    aliases: ['redeem', 'tredeem'],
	execute(Discord, client, pool, config, message, args, userInfo, func, shitself) {

        if(shitself == true) {
            return message.channel.send(`Database is on the fritz. The command will not work until the database is back up.`)
          }

    if(!message.member.roles.some(r=>["Survivor", "Adept Survivor", "Seasoned Survivor", "Hardened Survivor", "Veteran Survivor"].includes(r.name)) ) {
      message.channel.send(`You need to have a Survivor role to redeem a token.`)
      return;
  }
  var id = message.member.id
message.delete()
if(!args[0]) {
    message.channel.send(':tada: Redeem a booster token! \nUsage: ` ' + config.prefix + 'redeem {YourToken}` \nTokens can only be generated by moderators.')
    return;
} else {
    checkIfAlready(id) //checks if the user has a token already
}

function checkIfAlready(id) {
    pool.getConnection(function(err, conn) {
        var sql = `SELECT * FROM LevelSystem where id =?`;

        conn.query(sql, [id], function (err, results) {
          conn.release()
            if(results[0].boosttype == 'None') {
                checkIfValid(args[0], id)
            } else {
                message.reply('You already have a booster token')
                .then(msg => {
                    msg.delete(10000)
                    return;
                })
                
            }
        })
    })

    
}


function checkIfValid(input, id) {
    pool.getConnection(function(err, conn) {
        var sql = "SELECT * FROM boosterTokens where token=?";
        conn.query(sql, [input], function (err, results) {

            conn.release()
          if(!results[0]) {
            message.channel.send('Token doesn\'t exist.')
            return;
          }

            if(results[0].isExpired == 'true'){
                message.reply('The token has expired.')
                .then(msg => {
                    msg.delete(10000)
                    
                })
                
            } else if(results[0].redeemed == 'true') {
                message.reply('The token has already been redeemed.')
                .then(msg => {
                    msg.delete(10000)
                })
            } else {
                determineTier(input, id)
            }
          })
        
      })
}

function determineTier(input, id) {
    pool.getConnection(function(err, conn) {
        var sql = `SELECT * FROM boosterTokens where token =?`;

        conn.query(sql, [input], function (err, results) {
          conn.release()
          var tier = 'Unkown';
            if(results[0].tier == 't1') {
                tier = '1'
            } else if(results[0].tier == 't2') {
                tier = '2'
            } else if(results[0].tier == 't3') {
                tier = '3'
            } else if(results[0].tier == 'SDG') {
                tier = 'SDG'
            }

            var expires = results[0].expire;
            
            var boosttype = results[0].tier
            redeemToken(input, id, tier, expires, boosttype)
        })
    })
    
}


function redeemToken(input, id, tier, expires, boosttype) {

        firstQ(input, id, tier, expires, boosttype)
        secondQ(input, id, tier, expires, boosttype)
}

function firstQ(input, id, tier, expires, boosttype) {
    pool.getConnection(function(err, conn) {
        var sql = `UPDATE boosterTokens SET redeemed ='true' , redeemedBy =? WHERE token =?`;

                conn.query(sql, [id, input], function (err, results) {
            })
            conn.release()
        })
}

function secondQ(input, id, tier, expires, boosttype) {
    pool.getConnection(function(err, conn) {
        var sql = `UPDATE LevelSystem SET boosttype =? , boosttoken =? WHERE id =?`;

        conn.query(sql, [boosttype, input, id], function (err, results) {

            if(expires == '33468338387') {
                var timeText = 'Never'
            } else {
            var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
           
            var date = new Date(expires*1000);
           
            var year = date.getFullYear();
           
            var month = months_arr[date.getMonth()];
           
            var day = date.getDate();
           
            var hours = date.getHours();
           
            var minutes = "0" + date.getMinutes();

            var seconds = "0" + date.getSeconds();
           
            var timeText = month+'-'+day+'-'+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
            }

            message.reply('You\'ve redeemed a Tier' + tier + ' token! Enjoy your booster! (Expires: ' + timeText + ')')
            
        })
        conn.release()
    })
}


}}